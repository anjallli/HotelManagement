{"ast":null,"code":"var _class;\nimport { Owner } from '../owner';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Service/owner.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class OwnerLoginComponent {\n  //users: Owner = JSON.parse(sessionStorage.getItem(\"user\"))\n  constructor(userservices, route, activateRoute) {\n    this.userservices = userservices;\n    this.route = route;\n    this.activateRoute = activateRoute;\n    this.user = new Owner(0, \"\", \"\", \"\", \"\", \"\", \"\");\n  }\n  ngOnInit() {}\n  Getlogin() {\n    this.userservices.getlogin(this.user).subscribe(data => {\n      alert(\"Login Successfully\"), console.log(\"login response\" + data);\n      sessionStorage.setItem(\"user\", JSON.stringify(data));\n      this.route.navigateByUrl(\"/dashboard\");\n    }, error => alert(\"Sorry Please Enter correct Username And Password\"));\n  }\n  newregistration() {\n    this.route.navigateByUrl(\"/register\");\n  }\n  onSubmit() {\n    this.route.navigateByUrl(\"/products\");\n  }\n  goToDashboard() {\n    this.route.navigateByUrl(\"\");\n  }\n}\n_class = OwnerLoginComponent;\n_class.ɵfac = function OwnerLoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.OwnerService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-owner-login\"]],\n  decls: 29,\n  vars: 2,\n  consts: [[1, \"pt-5\"], [1, \"global-container\"], [1, \"card\", \"login-form\"], [1, \"card-body\"], [1, \"text-left\"], [1, \"btn\", \"btn-outline-primary\", 3, \"click\"], [1, \"card-title\", \"text-center\"], [1, \"card-text\"], [3, \"ngSubmit\"], [\"spForm\", \"ngForm\"], [1, \"row\"], [1, \"col-sm-2\", \"col-form-label\"], [1, \"col-sm-10\"], [\"type\", \"text\", \"name\", \"User Name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"Password\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\"]],\n  template: function OwnerLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function OwnerLoginComponent_Template_button_click_5_listener() {\n        return ctx.goToDashboard();\n      });\n      i0.ɵɵtext(6, \"Go to Main Page\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"h3\", 6);\n      i0.ɵɵtext(8, \" Login as Owner \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"form\", 8, 9);\n      i0.ɵɵlistener(\"ngSubmit\", function OwnerLoginComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.Getlogin();\n      });\n      i0.ɵɵelementStart(12, \"div\", 10)(13, \"label\", 11);\n      i0.ɵɵtext(14, \"User Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 12)(16, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function OwnerLoginComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.user.username = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 10)(18, \"label\", 11);\n      i0.ɵɵtext(19, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 12)(21, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function OwnerLoginComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 10);\n      i0.ɵɵelement(23, \"label\", 11);\n      i0.ɵɵelementStart(24, \"div\", 12)(25, \"button\", 15);\n      i0.ɵɵtext(26, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(28, \"br\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.username);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Owner","OwnerLoginComponent","constructor","userservices","route","activateRoute","user","ngOnInit","Getlogin","getlogin","subscribe","data","alert","console","log","sessionStorage","setItem","JSON","stringify","navigateByUrl","error","newregistration","onSubmit","goToDashboard","i0","ɵɵdirectiveInject","i1","OwnerService","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","OwnerLoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","OwnerLoginComponent_Template_button_click_5_listener","ɵɵtext","ɵɵelementEnd","OwnerLoginComponent_Template_form_ngSubmit_10_listener","OwnerLoginComponent_Template_input_ngModelChange_16_listener","$event","username","OwnerLoginComponent_Template_input_ngModelChange_21_listener","password","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["D:\\Angular\\HotelManagementSystem\\src\\app\\owner-login\\owner-login.component.ts","D:\\Angular\\HotelManagementSystem\\src\\app\\owner-login\\owner-login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Owner } from '../owner';\nimport { OwnerService } from '../Service/owner.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-owner-login',\n  templateUrl: './owner-login.component.html',\n  styleUrls: ['./owner-login.component.css']\n})\nexport class OwnerLoginComponent implements OnInit{\n\n  user: Owner = new Owner(0, \"\", \"\", \"\", \"\", \"\", \"\")\n  userdetails: any\n  password!: string;\n  uname!: string;\n  searchuser!: string;\n\n  //users: Owner = JSON.parse(sessionStorage.getItem(\"user\"))\n  constructor(private userservices: OwnerService, private route: Router, public activateRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n  }\n  Getlogin(): void {\n\n    this.userservices.getlogin(this.user).subscribe(data => {\n      alert(\"Login Successfully\"),\n        console.log(\"login response\" + data)\n\n      sessionStorage.setItem(\"user\", JSON.stringify(data))\n\n      this.route.navigateByUrl(\"/dashboard\")\n\n    },\n      error => alert(\"Sorry Please Enter correct Username And Password\"));\n\n  }\n  newregistration(){\n    this.route.navigateByUrl(\"/register\")\n  }\n  onSubmit() {\n    this.route.navigateByUrl(\"/products\");\n\n  }\n  goToDashboard(){\n    this.route.navigateByUrl(\"\")\n\n  }\n}\n","<div class=\"pt-5\">  \n    <div class=\"global-container\">  \n      <div class=\"card login-form\">  \n      <div class=\"card-body\"> \n        <div class=\"text-left\">\n            <button (click)=\"goToDashboard()\" class=\"btn btn-outline-primary\" >Go to Main Page</button>\n          </div>  \n          <h3 class=\"card-title text-center\"> Login as Owner </h3>  \n          <div class=\"card-text\">  \n            <form #spForm=\"ngForm\" (ngSubmit)=\"Getlogin()\">\n                <div class=\"row\">\n                    <label class=\"col-sm-2 col-form-label\">User Name</label>\n                    <div class=\"col-sm-10\">\n                        <input type=\"text\" name=\"User Name\" [(ngModel)]=\"user.username\" />\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <label class=\"col-sm-2 col-form-label\">Password</label>\n                    <div class=\"col-sm-10\">\n                        <input type=\"password\" name=\"Password\" [(ngModel)]=\"user.password\" />\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <label class=\"col-sm-2 col-form-label\"></label>\n                    <div class=\"col-sm-10\">\n                        <button class=\"btn btn-info\" type=\"submit\" class=\"btn btn-outline-primary\">Login</button>\n                        <br>\n                       <!-- Don't have an account? \n                        <button class=\"btn btn-info\" type=\"button\" (click)=\"newregistration()\" class=\"btn btn-outline-primary\">Register</button>\n-->\n                    </div>\n                </div>\n                <br>\n\n            \n\n\n\n            </form>\n\n          </div>  \n      </div>  \n  </div>  \n  </div>  \n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}