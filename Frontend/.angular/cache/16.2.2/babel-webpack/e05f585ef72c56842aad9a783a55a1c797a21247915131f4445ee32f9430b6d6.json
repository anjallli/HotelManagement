{"ast":null,"code":"var _class;\nimport { Customer } from '../customer';\nimport { Booking } from '../booking';\nimport { Payment } from '../payment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Service/booking.service\";\nimport * as i2 from \"../Service/payment.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../Service/customer.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction PaymentModuleComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" totalAmount is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentModuleComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, PaymentModuleComponent_div_14_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(13);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"required\"]);\n  }\n}\nfunction PaymentModuleComponent_div_21_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" card Holder Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentModuleComponent_div_21_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" card Holder Name must be at least 4 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentModuleComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, PaymentModuleComponent_div_21_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵtemplate(2, PaymentModuleComponent_div_21_div_2_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(20);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors[\"minlength\"]);\n  }\n}\nfunction PaymentModuleComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" card number Id is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentModuleComponent_div_28_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" card number must be at least 16 digit long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentModuleComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, PaymentModuleComponent_div_28_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵtemplate(2, PaymentModuleComponent_div_28_div_2_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(27);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors == null ? null : _r5.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors == null ? null : _r5.errors[\"minlength\"]);\n  }\n}\nfunction PaymentModuleComponent_div_35_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Customer Contact Number is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentModuleComponent_div_35_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Contact Number must be at least 3 digit and numbers only. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentModuleComponent_div_35_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Contact Number must be 3 digit only. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentModuleComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, PaymentModuleComponent_div_35_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵtemplate(2, PaymentModuleComponent_div_35_div_2_Template, 2, 0, \"div\", 21);\n    i0.ɵɵtemplate(3, PaymentModuleComponent_div_35_div_3_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r7 = i0.ɵɵreference(34);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r7.errors == null ? null : _r7.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r7.errors == null ? null : _r7.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r7.errors == null ? null : _r7.errors[\"maxlength\"]);\n  }\n}\nexport class PaymentModuleComponent {\n  constructor(bookingService, paymentService, route, router, customerService) {\n    this.bookingService = bookingService;\n    this.paymentService = paymentService;\n    this.route = route;\n    this.router = router;\n    this.customerService = customerService;\n    this.customer = new Customer(0, \"\", \"\", \"\", \"\", \"\", \"\");\n    this.booking = new Booking(0, 0, 0, '', 0, 0);\n    this.payment = new Payment(0, 0, 0, 0, 0, \"\", \"\");\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.total = this.route.snapshot.paramMap.get('total');\n    this.customerService.getCustomerById(this.id).subscribe(data => {\n      this.customer = data;\n    }, error => console.log(error));\n    this.payment.totalAmount = this.total;\n    console.log(this.id);\n    console.log(this.total);\n  }\n  Book() {\n    this.result = this.booking.totalAmount;\n  }\n  onSubmit() {\n    console.log(this.customer);\n    this.payment.status = \"Completed\";\n    this.payment.customerId = this.id;\n    this.paymentService.payment(this.payment).subscribe(data => console.log(data));\n    this.router.navigateByUrl(\"dashboard/bookings\");\n  }\n  goToDashboard() {\n    this.router.navigateByUrl(\"/dashboard\");\n  }\n  onlyNumbers(event) {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      console.log(\"chacode restricted : \" + charCode);\n      return false;\n    }\n    return true;\n  }\n}\n_class = PaymentModuleComponent;\n_class.ɵfac = function PaymentModuleComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.BookingService), i0.ɵɵdirectiveInject(i2.PaymentServiceService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CustomerService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-payment-module\"]],\n  decls: 43,\n  vars: 10,\n  consts: [[1, \"main-content\"], [1, \"section-content\", \"section-content-p30\"], [1, \"container-fluid\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-group\", \"row\"], [1, \"col-sm-2\", \"col-form-label\", 2, \"text-align\", \"left\"], [1, \"col-sm-10\"], [\"type\", \"text\", \"name\", \"totalAmount\", \"readonly\", \"\", \"required\", \"\", 3, \"value\", \"ngModel\", \"ngModelChange\"], [\"totalAmount\", \"ngModel\"], [\"class\", \"alert\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"cardHolderName\", \"required\", \"\", \"minlength\", \"4\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [\"type\", \"text\", \"name\", \"cardNumber\", \"required\", \"\", \"minlength\", \"16\", \"maxlength\", \"16\", 3, \"ngModel\", \"ngModelChange\", \"keypress\"], [\"cardNumber\", \"ngModel\"], [\"type\", \"text\", \"name\", \"cvv\", \"required\", \"\", \"minlength\", \"3\", \"maxlength\", \"3\", 3, \"ngModel\", \"ngModelChange\", \"keypress\"], [\"cvv\", \"ngModel\"], [1, \"col-sm-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\", 2, \"text-align\", \"left\", 3, \"disabled\"], [\"type\", \"reset\", 1, \"btn\", \"btn-outline-primary\", 2, \"text-align\", \"right\"], [1, \"alert\"], [4, \"ngIf\"]],\n  template: function PaymentModuleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function PaymentModuleComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\")(6, \"h1\");\n      i0.ɵɵtext(7, \"Payment\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Total Amount : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentModuleComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.payment.totalAmount = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, PaymentModuleComponent_div_14_Template, 2, 1, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 5)(16, \"label\", 6);\n      i0.ɵɵtext(17, \"Card Holder Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 7)(19, \"input\", 11, 12);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentModuleComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.payment.cardHolderName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(21, PaymentModuleComponent_div_21_Template, 3, 2, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 5)(23, \"label\", 6);\n      i0.ɵɵtext(24, \"Card Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 7)(26, \"input\", 13, 14);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentModuleComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.payment.cardNumber = $event;\n      })(\"keypress\", function PaymentModuleComponent_Template_input_keypress_26_listener($event) {\n        return ctx.onlyNumbers($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(28, PaymentModuleComponent_div_28_Template, 3, 2, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 5)(30, \"label\", 6);\n      i0.ɵɵtext(31, \"CVV \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 7)(33, \"input\", 15, 16);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentModuleComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.payment.cvv = $event;\n      })(\"keypress\", function PaymentModuleComponent_Template_input_keypress_33_listener($event) {\n        return ctx.onlyNumbers($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(35, PaymentModuleComponent_div_35_Template, 4, 3, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 5)(37, \"div\", 17)(38, \"button\", 18);\n      i0.ɵɵtext(39, \"Make Payment\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(40, \"div\", 17)(41, \"button\", 19);\n      i0.ɵɵtext(42, \"Reset\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(4);\n      const _r1 = i0.ɵɵreference(13);\n      const _r3 = i0.ɵɵreference(20);\n      const _r5 = i0.ɵɵreference(27);\n      const _r7 = i0.ɵɵreference(34);\n      i0.ɵɵadvance(12);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.total);\n      i0.ɵɵproperty(\"ngModel\", ctx.payment.totalAmount);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.invalid && (_r1.dirty || _r1.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.payment.cardHolderName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && (_r3.dirty || _r3.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.payment.cardNumber);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r5.invalid && (_r5.dirty || _r5.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.payment.cvv);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r7.invalid && (_r7.dirty || _r7.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i5.NgIf, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.MinLengthValidator, i6.MaxLengthValidator, i6.NgModel, i6.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Customer","Booking","Payment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","PaymentModuleComponent_div_14_div_1_Template","ɵɵadvance","ɵɵproperty","_r1","errors","PaymentModuleComponent_div_21_div_1_Template","PaymentModuleComponent_div_21_div_2_Template","_r3","PaymentModuleComponent_div_28_div_1_Template","PaymentModuleComponent_div_28_div_2_Template","_r5","PaymentModuleComponent_div_35_div_1_Template","PaymentModuleComponent_div_35_div_2_Template","PaymentModuleComponent_div_35_div_3_Template","_r7","PaymentModuleComponent","constructor","bookingService","paymentService","route","router","customerService","customer","booking","payment","ngOnInit","id","snapshot","paramMap","get","total","getCustomerById","subscribe","data","error","console","log","totalAmount","Book","result","onSubmit","status","customerId","navigateByUrl","goToDashboard","onlyNumbers","event","charCode","which","keyCode","ɵɵdirectiveInject","i1","BookingService","i2","PaymentServiceService","i3","ActivatedRoute","Router","i4","CustomerService","selectors","decls","vars","consts","template","PaymentModuleComponent_Template","rf","ctx","ɵɵlistener","PaymentModuleComponent_Template_form_ngSubmit_3_listener","PaymentModuleComponent_Template_input_ngModelChange_12_listener","$event","PaymentModuleComponent_div_14_Template","PaymentModuleComponent_Template_input_ngModelChange_19_listener","cardHolderName","PaymentModuleComponent_div_21_Template","PaymentModuleComponent_Template_input_ngModelChange_26_listener","cardNumber","PaymentModuleComponent_Template_input_keypress_26_listener","PaymentModuleComponent_div_28_Template","PaymentModuleComponent_Template_input_ngModelChange_33_listener","cvv","PaymentModuleComponent_Template_input_keypress_33_listener","PaymentModuleComponent_div_35_Template","ɵɵpropertyInterpolate","invalid","dirty","touched","_r0"],"sources":["D:\\Angular\\HotelManagementSystem\\src\\app\\payment-module\\payment-module.component.ts","D:\\Angular\\HotelManagementSystem\\src\\app\\payment-module\\payment-module.component.html"],"sourcesContent":["import { Component} from '@angular/core';\nimport { Customer } from '../customer';\nimport { Booking } from '../booking';\nimport { BookingService } from '../Service/booking.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CustomerService } from '../Service/customer.service';\nimport { Payment } from '../payment';\nimport { PaymentServiceService } from '../Service/payment.service';\n\n\n@Component({\n  selector: 'app-payment-module',\n  templateUrl: './payment-module.component.html',\n  styleUrls: ['./payment-module.component.css']\n})\nexport class PaymentModuleComponent {\n \n\n  id:any;\n  \n  result!: number;\n  total:any;\n  customer:Customer = new Customer(0,\"\",\"\",\"\",\"\",\"\",\"\");\n  booking :Booking = new Booking(0,0,0,'',0,0);\n  payment:Payment=new Payment(0,0,0,0,0,\"\",\"\");\n  constructor(private bookingService:BookingService,private paymentService:PaymentServiceService,private route:ActivatedRoute,private router:Router,private customerService:CustomerService){}\n \n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.total = this.route.snapshot.paramMap.get('total');\n    this.customerService.getCustomerById(this.id).subscribe(data=>{this.customer=data;},error=>console.log(error));\n    this.payment.totalAmount=this.total;\n   console.log(this.id);\n   console.log(this.total); \n   }\n\n   Book(){\n    \n    this.result=this.booking.totalAmount;\n   \n\n    }\n\n    \n\n  onSubmit(){\n    \n    console.log(this.customer);\n    this.payment.status=\"Completed\";\n    this.payment.customerId=this.id;\n    \n    this.paymentService.payment( this.payment ).subscribe(data =>\n      console.log(data));\n      this.router.navigateByUrl(\"dashboard/bookings\");\n\n\n\n\n    }\n    goToDashboard(){\n      this.router.navigateByUrl(\"/dashboard\");    \n    }\n\n    onlyNumbers(event: {\n      keyCode: any; which: any; \n}):boolean{\n      const charCode = (event.which)?event.which:event.keyCode;\n      if(charCode>31 && (charCode<48 || charCode>57))\n      {\n        console.log(\"chacode restricted : \"+charCode);\n        return false;\n      }\n      return true;\n\n    }\n\n\n}\n","<!--<p>payment-module works!</p>\n\n<div class=\"col-sm-2\"><button (click)=\"Book()\" class=\"btn btn-outline-primary\">Make Payment</button></div>\n{{total}} \n\n{{customer.employeeName}}\n-->\n\n\n\n<div class=\"main-content\">\n\n    \n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\" >\n            \n\n \n            <form (ngSubmit)=\"onSubmit()\" #f=\"ngForm\" >\n              <div><h1>Payment</h1></div>\n\n                <!--<div class=\"form-group row\">\n                    <label class =\"col-sm-2 col-form-label\" style=\"text-align: left;\">Customer Id</label>\n                    <div class =\"col-sm-10\">\n                        <input type =\"text\" name=\"employeeId\" [(ngModel)]=\"customer.employeeId\" />\n                       \n                    </div>\n                  </div>\n               public paymentId:number,\n      public customerId:number,\n      public totalAmount:number,\n      \n      public cardNumber:number,\n      public cvv:number,\n      public cardHolderName:string,\n      public status:string\n              -->\n              \n              <div class=\"form-group row\">\n                  <label class =\"col-sm-2 col-form-label\" style=\"text-align: left;\">Total Amount : </label>\n                  <div class =\"col-sm-10\">\n                     \n                      <input type=\"text\"  name=\"totalAmount\" value=\"{{total}}\" [(ngModel)]=\"payment.totalAmount\"  readonly required  #totalAmount=\"ngModel\" />\n                     \n                  </div>\n                  <div *ngIf=\"totalAmount.invalid && (totalAmount.dirty || totalAmount.touched)\" class=\"alert\">\n\n                    <div *ngIf=\"totalAmount.errors?.['required']\">\n                      totalAmount is required.\n                    </div>\n                     \n                    \n                  </div>\n                </div>\n                  <div class=\"form-group row\">\n                    <label class =\"col-sm-2 col-form-label\" style=\"text-align: left;\">Card Holder Name</label>\n                    \n                        \n                    <div class=\"col-sm-10\">\n\n                          <input type=\"text\"  name=\"cardHolderName\"   [(ngModel)]=\"payment.cardHolderName\"  required minlength=\"4\" #name=\"ngModel\" />\n                    </div>\n                      \n                    <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"alert\">\n  \n                      <div *ngIf=\"name.errors?.['required']\">\n                          card Holder Name is required.\n                      </div>\n                       <div *ngIf=\"name.errors?.['minlength']\">\n                          card Holder Name must be at least 4 characters long.\n                      </div>\n                      \n\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                      <label class =\"col-sm-2 col-form-label\" style=\"text-align: left;\">Card Number</label>\n                      <div class =\"col-sm-10\">\n                          \n                          <input type=\"text\"  name=\"cardNumber\"  [(ngModel)]=\"payment.cardNumber\"  required minlength=\"16\" maxlength=\"16\" #cardNumber=\"ngModel\" (keypress)=\"onlyNumbers($event)\" />\n                 \n                      </div>\n                      <div *ngIf=\"cardNumber.invalid && (cardNumber.dirty || cardNumber.touched)\" class=\"alert\">\n  \n                        <div *ngIf=\"cardNumber.errors?.['required']\">\n                             card number Id is required.\n                        </div>\n                         <div *ngIf=\"cardNumber.errors?.['minlength']\">\n                          card number must be at least 16 digit long.\n                        </div>\n                        \n                      </div>\n                    </div>\n                   <div class=\"form-group row\">\n\n                   <label class =\"col-sm-2 col-form-label\" style=\"text-align: left;\">CVV </label>\n                    <div class =\"col-sm-10\">\n                          <input type=\"text\"  name=\"cvv\" [(ngModel)]=\"payment.cvv\" required minlength=\"3\" maxlength=\"3\"  #cvv=\"ngModel\" (keypress)=\"onlyNumbers($event)\" />\n                         \n                    </div>\n                    \n                    <div *ngIf=\"cvv.invalid && (cvv.dirty || cvv.touched)\" class=\"alert\">\n  \n                      <div *ngIf=\"cvv.errors?.['required']\">\n                           Customer Contact Number is required.\n                      </div>\n                      <div *ngIf=\"cvv.errors?.['minlength']\">\n                        Contact Number must be at least 3 digit and numbers only.\n                        \n                      </div>\n                      <div *ngIf=\"cvv.errors?.['maxlength']\">\n                        Contact Number must be 3 digit only.\n                        \n                      </div>\n                    \n                    </div>\n                  </div>\n\n             \n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-2\"><button type =\"submit\"class=\"btn btn-outline-primary\" style=\"text-align: left;\"[disabled]=\"f.invalid\">Make Payment</button></div>\n                      <div class=\"col-sm-2\"><button type=\"reset\" class=\"btn btn-outline-primary\" style=\"text-align: right;\">Reset</button></div>\n                    </div>\n                </form>\n</div>\n</div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}