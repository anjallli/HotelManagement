{"ast":null,"code":"var _class;\nimport { Customer } from '../customer';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Service/customer.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class CustomerLoginComponent {\n  constructor(userservices, route, activateRoute) {\n    this.userservices = userservices;\n    this.route = route;\n    this.activateRoute = activateRoute;\n    this.user2 = new Customer(0, \"\", \"\", \"\", \"\", \"\", \"\");\n    this.users = JSON.parse(sessionStorage.getItem(\"user2\") || '{}');\n  }\n  ngOnInit() {}\n  Getlogin() {\n    this.userservices.getlogin(this.user2).subscribe(data => {\n      alert(\"Login Successfully\"), console.log(\"login response\" + data);\n      sessionStorage.setItem(\"user2\", JSON.stringify(data));\n      this.route.navigateByUrl(\"/customerdashboard\");\n    }, error => alert(\"Sorry Please Enter correct Username And Password\"));\n  }\n  newregistration() {\n    this.route.navigateByUrl(\"/addcustomer\");\n  }\n  goToDashboard() {\n    this.route.navigateByUrl(\"\");\n  }\n}\n_class = CustomerLoginComponent;\n_class.ɵfac = function CustomerLoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-customer-login\"]],\n  decls: 32,\n  vars: 2,\n  consts: [[1, \"pt-5\"], [1, \"global-container\"], [1, \"card\", \"login-form\"], [1, \"card-body\"], [1, \"text-left\"], [1, \"btn\", \"btn-outline-primary\", 3, \"click\"], [1, \"card-title\", \"text-center\"], [1, \"card-text\"], [3, \"ngSubmit\"], [\"spForm\", \"ngForm\"], [1, \"row\"], [1, \"col-sm-2\", \"col-form-label\"], [1, \"col-sm-10\"], [\"type\", \"text\", \"name\", \"User Name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"Password\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"click\"]],\n  template: function CustomerLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function CustomerLoginComponent_Template_button_click_5_listener() {\n        return ctx.goToDashboard();\n      });\n      i0.ɵɵtext(6, \"Go to Main Page\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"h3\", 6);\n      i0.ɵɵtext(8, \" Login as Customer \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"form\", 8, 9);\n      i0.ɵɵlistener(\"ngSubmit\", function CustomerLoginComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.Getlogin();\n      });\n      i0.ɵɵelementStart(12, \"div\", 10)(13, \"label\", 11);\n      i0.ɵɵtext(14, \"User Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 12)(16, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerLoginComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.user2.username = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 10)(18, \"label\", 11);\n      i0.ɵɵtext(19, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 12)(21, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerLoginComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.user2.password = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 10);\n      i0.ɵɵelement(23, \"label\", 11);\n      i0.ɵɵelementStart(24, \"div\", 12)(25, \"button\", 15);\n      i0.ɵɵtext(26, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"br\");\n      i0.ɵɵtext(28, \" Don't have an account? \");\n      i0.ɵɵelementStart(29, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function CustomerLoginComponent_Template_button_click_29_listener() {\n        return ctx.newregistration();\n      });\n      i0.ɵɵtext(30, \"Register\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(31, \"br\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngModel\", ctx.user2.username);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.user2.password);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Customer","CustomerLoginComponent","constructor","userservices","route","activateRoute","user2","users","JSON","parse","sessionStorage","getItem","ngOnInit","Getlogin","getlogin","subscribe","data","alert","console","log","setItem","stringify","navigateByUrl","error","newregistration","goToDashboard","i0","ɵɵdirectiveInject","i1","CustomerService","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","CustomerLoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","CustomerLoginComponent_Template_button_click_5_listener","ɵɵtext","ɵɵelementEnd","CustomerLoginComponent_Template_form_ngSubmit_10_listener","CustomerLoginComponent_Template_input_ngModelChange_16_listener","$event","username","CustomerLoginComponent_Template_input_ngModelChange_21_listener","password","ɵɵelement","CustomerLoginComponent_Template_button_click_29_listener","ɵɵadvance","ɵɵproperty"],"sources":["D:\\Angular\\HotelManagementSystem\\src\\app\\customer-login\\customer-login.component.ts","D:\\Angular\\HotelManagementSystem\\src\\app\\customer-login\\customer-login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Customer } from '../customer';\nimport { CustomerService } from '../Service/customer.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-customer-login',\n  templateUrl: './customer-login.component.html',\n  styleUrls: ['./customer-login.component.css']\n})\nexport class CustomerLoginComponent {\n  user2: Customer = new Customer(0, \"\", \"\", \"\", \"\",\"\",\"\")\n\n  users: Customer = JSON.parse(sessionStorage.getItem(\"user2\") || '{}')\n\n  constructor(private userservices: CustomerService, private route: Router, public activateRoute: ActivatedRoute) { }\n \n \n  ngOnInit(): void {\n  }\n  Getlogin(): void {\n\n    this.userservices.getlogin(this.user2).subscribe(data => {\n      alert(\"Login Successfully\"),\n        console.log(\"login response\" + data)\n\n      sessionStorage.setItem(\"user2\", JSON.stringify(data))\n\n      this.route.navigateByUrl(\"/customerdashboard\")\n\n    },\n      error => alert(\"Sorry Please Enter correct Username And Password\"));\n\n  }\n\n  newregistration(){\n    this.route.navigateByUrl(\"/addcustomer\"); \n  }\n\n  goToDashboard(){\n    this.route.navigateByUrl(\"\"); \n\n  }\n\n}\n","\n\n<div class=\"pt-5\">  \n    <div class=\"global-container\">  \n      <div class=\"card login-form\">  \n      <div class=\"card-body\">  \n        <div class=\"text-left\">\n            <button (click)=\"goToDashboard()\" class=\"btn btn-outline-primary\" >Go to Main Page</button>\n          </div> \n          <h3 class=\"card-title text-center\"> Login as Customer </h3>  \n          <div class=\"card-text\">  \n            <form #spForm=\"ngForm\" (ngSubmit)=\"Getlogin()\">\n                <div class=\"row\">\n                    <label class=\"col-sm-2 col-form-label\">User Name</label>\n                    <div class=\"col-sm-10\">\n                        <input type=\"text\" name=\"User Name\" [(ngModel)]=\"user2.username\" />\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <label class=\"col-sm-2 col-form-label\">Password</label>\n                    <div class=\"col-sm-10\">\n                        <input type=\"password\" name=\"Password\" [(ngModel)]=\"user2.password\" />\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <label class=\"col-sm-2 col-form-label\"></label>\n                    <div class=\"col-sm-10\">\n                        <button class=\"btn btn-info\" type=\"submit\" class=\"btn btn-outline-primary\">Login</button>\n                        <br>\n                       Don't have an account? \n                        <button class=\"btn btn-info\" type=\"button\" (click)=\"newregistration()\" class=\"btn btn-outline-primary\">Register</button>\n\n                    </div>\n                </div>\n                <br>\n\n            \n\n\n\n            </form>\n\n          </div>  \n      </div>  \n  </div>  \n  </div>  \n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}