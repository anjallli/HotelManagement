{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OwnerService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.loginurl = \"http://localhost:8080/owner/login\";\n    this.userUrl = \"http://localhost:8080/owner/list\";\n    this.newuserurl = \"http://localhost:8080/owner/saveuser\";\n  }\n  getlogin(user) {\n    console.log(user);\n    return this.httpClient.post(`${this.loginurl}`, user);\n  }\n  getuserbyid(uid) {\n    const uidUrl = this.userUrl + \"/\" + uid;\n    return this.httpClient.get(uidUrl);\n  }\n  updateUser(user) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'auth-token',\n        'Access-Control-Allow-Origin': '*'\n      })\n    };\n    return this.httpClient.put(this.userUrl + `/${user.ownerId}`, user, httpOptions);\n  }\n  ///user Maintainance\n  saveUser(user) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'auth-token',\n        'Access-Control-Allow-Origin': '*'\n      })\n    };\n    return this.httpClient.post(this.newuserurl, user, httpOptions);\n  }\n}\n_class = OwnerService;\n_class.ɵfac = function OwnerService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","OwnerService","constructor","httpClient","loginurl","userUrl","newuserurl","getlogin","user","console","log","post","getuserbyid","uid","uidUrl","get","updateUser","httpOptions","headers","put","ownerId","saveUser","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Angular\\HotelManagementSystem\\src\\app\\Service\\owner.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Owner } from '../owner';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OwnerService {\n\n  \n\n\n  private loginurl = \"http://localhost:8080/owner/login\";\n  private userUrl=\"http://localhost:8080/owner/list\";\n  private newuserurl = \"http://localhost:8080/owner/saveuser\";\n  constructor(private httpClient: HttpClient) \n  {\n\n   }\n\n    getlogin(user: Owner): Observable<Owner> {\n    console.log(user);\n    return this.httpClient.post<Owner>(`${this.loginurl}`, user);\n    }\n\n  \n\n  getuserbyid(uid: number):Observable<Owner>  {\n    const uidUrl = this.userUrl + \"/\" + uid;\n    return this.httpClient.get<Owner>(uidUrl);\n  }\n\n\n  \n  \n  updateUser(user: Owner): Observable<Owner> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'auth-token',\n        'Access-Control-Allow-Origin': '*'\n      })\n    };\n    return this.httpClient.put<Owner>(this.userUrl + `/${user.ownerId}`, user, httpOptions);\n  }\n\n  \n  ///user Maintainance\n\n  saveUser(user: Owner): Observable<Owner> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'auth-token',\n        'Access-Control-Allow-Origin': '*'\n      })\n    };\n    return this.httpClient.post<Owner>(this.newuserurl, user, httpOptions);\n  }\n}\n"],"mappings":";AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,YAAY;EAQvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAHtB,KAAAC,QAAQ,GAAG,mCAAmC;IAC9C,KAAAC,OAAO,GAAC,kCAAkC;IAC1C,KAAAC,UAAU,GAAG,sCAAsC;EAI1D;EAECC,QAAQA,CAACC,IAAW;IACpBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,OAAO,IAAI,CAACL,UAAU,CAACQ,IAAI,CAAQ,GAAG,IAAI,CAACP,QAAQ,EAAE,EAAEI,IAAI,CAAC;EAC5D;EAIFI,WAAWA,CAACC,GAAW;IACrB,MAAMC,MAAM,GAAG,IAAI,CAACT,OAAO,GAAG,GAAG,GAAGQ,GAAG;IACvC,OAAO,IAAI,CAACV,UAAU,CAACY,GAAG,CAAQD,MAAM,CAAC;EAC3C;EAKAE,UAAUA,CAACR,IAAW;IACpB,MAAMS,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIlB,WAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,YAAY;QAC7B,6BAA6B,EAAE;OAChC;KACF;IACD,OAAO,IAAI,CAACG,UAAU,CAACgB,GAAG,CAAQ,IAAI,CAACd,OAAO,GAAG,IAAIG,IAAI,CAACY,OAAO,EAAE,EAAEZ,IAAI,EAAES,WAAW,CAAC;EACzF;EAGA;EAEAI,QAAQA,CAACb,IAAW;IAClB,MAAMS,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIlB,WAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,YAAY;QAC7B,6BAA6B,EAAE;OAChC;KACF;IACD,OAAO,IAAI,CAACG,UAAU,CAACQ,IAAI,CAAQ,IAAI,CAACL,UAAU,EAAEE,IAAI,EAAES,WAAW,CAAC;EACxE;;SAnDWhB,YAAY;;mBAAZA,MAAY,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAZxB,MAAY;EAAAyB,OAAA,EAAZzB,MAAY,CAAA0B,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}